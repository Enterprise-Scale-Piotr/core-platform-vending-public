# ATLZ Platform Dev / reusable workflow / terraform validate & plan
# https://docs.github.com/en/actions/using-workflows/reusing-workflows

on:
  workflow_call:
    inputs:
      gh_workflow:
        required: true
        type: string

jobs:
  plan:
    name: Plan with Terraform
    runs-on: ubuntu-latest
    #concurrency: seed-tfstate
    environment: ${{ github.ref == 'refs/heads/main' && 'bootstrap-prod' || 'bootstrap-dev' }}
    defaults:
      run:
        working-directory: ${{ inputs.gh_workflow }}
    env: ### Azure Service Principal based on Auth by secret
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      #ARM_USE_AZUREAD: true
      #ARM_USE_OIDC: false

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.8.5"
          terraform_wrapper: false

      - name: Terraform Init
        run: |
          terraform init \
          -backend-config="resource_group_name=${{vars.TFBE_RESOURCE_GROUP_NAME}}" \
          -backend-config="storage_account_name=${{vars.TFBE_STORAGE_ACCOUNT_NAME}}" \
          -backend-config="container_name=${{vars.TFBE_CONTAINER_NAME}}" \
          -backend-config="key=${{ inputs.gh_workflow }}-${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}.tfstate"

      - name: Terraform Plan for ${{ inputs.terraform_action == 'destroy' && 'Destroy' || 'Apply' }}
        run: |
          # shellcheck disable=SC2086
          terraform plan \
          -out=tfplan \
          -var-file=./config/${{ github.ref == 'refs/heads/main' && 'product' || 'develop' }}.yaml \
          -no-color \
          -input=false ${{ inputs.terraform_action == 'destroy' && '-destroy' || '' }}

      - name: Create Module Artifact
        run: |
          $stagingDirectory = "staging"
          New-Item -Path . -Name $stagingDirectory -ItemType "directory"
          Copy-Item -Path "./*" -Exclude @(".git", ".terraform", ".github",  $stagingDirectory) -Recurse -Destination "./$stagingDirectory"

        shell: pwsh

      - name: Publish Module Artifact
        uses: actions/upload-artifact@v4
        with:
          name: module
          path: ./${{ inputs.gh_workflow }}

      - name: Show the Plan for Review
        run: terraform show tfplan

  apply:
    needs: plan
    name: Apply with Terraform
    runs-on: ubuntu-latest
    #concurrency: dev-tfstate
    environment: ${{ github.ref == 'refs/heads/main' && 'bootstrap-prod' || 'bootstrap-dev' }}

    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      #ARM_USE_AZUREAD: true
      #ARM_USE_OIDC: true

    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: module

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.8.5"
          terraform_wrapper: false

      #- name: Env Check
      #  run: pwd && ls

      - name: Terraform Init
        run: |
          terraform init \
          -backend-config="resource_group_name=${{vars.TFBE_RESOURCE_GROUP_NAME}}" \
          -backend-config="storage_account_name=${{vars.TFBE_STORAGE_ACCOUNT_NAME}}" \
          -backend-config="container_name=${{vars.TFBE_CONTAINER_NAME}}" \
          -backend-config="key=${{ inputs.gh_workflow }}-${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}.tfstate"

      - name: Terraform ${{ inputs.terraform_action == 'destroy' && 'Destroy' || 'Apply' }}
        run: terraform apply -input=false -auto-approve tfplan
